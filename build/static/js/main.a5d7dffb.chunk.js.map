{"version":3,"sources":["assets/Logo.png","Components/Periodic_Table/PeriodicTable.js","Components/Game1/Wrong.js","Components/Game1/Game1.js","Components/Periodic_Table/ScoreBoard.js","Components/Start/Start.js","Components/Table/PeriodicTableScreen.js","Components/Table/PTable.js","Components/HighScore/HighScore.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colorMap","lanthanide","metalloid","PeriodicTableScreen","submitAnswer","className","data","elements","map","element","key","name","style","gridRow","ypos","gridColumn","xpos","borderColor","category","width","onClick","symbol","number","Wrong","Value","maxValue","onFinish","React","useState","PenaltySeconds","setPenaltySeconds","useEffect","setTimeout","class","value","max","margin","Game1","Score","setScore","HighScore","setHighScore","setGameState","ElementName","setElementName","counter","setCounter","testState","setTestState","Penalty","setPenalty","DataList","EndGame","localStorage","setItem","newQuestion","randomElements","Math","floor","random","percent","strokeWidth","strokeColor","strokeLinecap","sendData","score","a","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","options","method","url","headers","time","axios","request","then","response","console","log","catch","error","ScoreBoard","yourScore","endGame","validName","setValidName","setName","type","onChange","event","target","placeholder","marginBottom","Start","startGame1","startGame2","openRanking","TopScore","setTopScore","getItem","src","logo","alt","handleOpen","setDetailTitle","setDetailAtomicMass","setDeatilCategory","setDetailDensity","setDetailApperance","setDetailmolar_heat","setDetailmelt","setDetailboil","setDetailsummary","setDetailSource","atomic_mass","density","appearance","molar_heat","melt","boil","summary","source","converKToC","K","Celsius","round","PTable","goHome","open","setOpen","DetailTitle","DetailAtomicMass","DeatilCategory","DetailDensity","DetailApperance","Detailmolar_heat","Detailmelt","Detailboil","Detailsummary","DetailSource","handleClose","Button","href","rel","Modal","onClose","Header","Title","Body","Footer","createTheme","text","primary","secondary","background","default","context","divider","action","button","hover","disabled","RankingTitleContainer","styled","div","RankingTable","RankingTitle","h1","HighScorePage","setData","get","res","scores","columns","selector","row","theme","responsive","fixedHeader","marginTop","App","GameState","setSeconds","expiryTimestamp","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a5d7dffb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.56c038c9.png\";","import React from \"react\";\nimport data from \"../Game1/PeriodicTableJSON.json\";\nimport \"./PeriodicTable.css\";\n\nconst colorMap = {\n  \"noble gas\": \"#FFBC42\",\n  \"alkaline earth metal\": \"#EC674E\",\n  \"diatomic nonmetal\": \"#D81159\",\n  \"alkali metal\": \"#8F2D56\",\n  \"transition metal\": \"#58586B\",\n  \"post-transition metal\": \"#218380\",\n  lanthanide: \"#4AABAF\",\n  metalloid: \"#73D2DE\",\n};\n\nconst PeriodicTableScreen = ({ submitAnswer }) => {\n  return (\n    <div className=\"periodic-table\">\n      {data.elements.map((element) => (\n        <div\n          className=\"element\"\n          key={element.name}\n          style={{\n            gridRow: element.ypos,\n            gridColumn: element.xpos,\n            borderColor: colorMap[element.category],\n            width: \"64px\",\n          }}\n          onClick={() => {\n            submitAnswer(element.name);\n          }}\n        >\n          <strong>{element.symbol}</strong>\n          <small className=\"number\">{element.number}</small>\n          <small className=\"name\">{element.name}</small>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PeriodicTableScreen;\n","import React from \"react\";\n\nimport \"./Wrong.css\";\n\nconst Wrong = ({ Value, maxValue, onFinish }) => {\n  const [PenaltySeconds, setPenaltySeconds] = React.useState(3);\n\n  React.useEffect(() => {\n    PenaltySeconds > 0 &&\n      setTimeout(() => setPenaltySeconds(PenaltySeconds - 1), 1000);\n    PenaltySeconds === 0 &&\n      setTimeout(() => {\n        onFinish();\n      }, 1000);\n    // eslint-disable-next-line\n  }, [PenaltySeconds]);\n\n  return (\n    <div className=\"Wrong \">\n      <h1 class=\"\">Wrong</h1>\n      <progress\n        class=\"progressBar animated\"\n        value={PenaltySeconds}\n        max={maxValue}\n      />\n      <p style={{ margin: 0 }}>{PenaltySeconds}</p>\n    </div>\n  );\n};\n\nexport default Wrong;\n","import React, { useState, useEffect } from \"react\";\nimport { Line } from \"rc-progress\";\n\nimport \"./Game1.css\";\n\nimport PeriodicTable from \"../Periodic_Table/PeriodicTable\";\nimport data from \"./PeriodicTableJSON.json\";\nimport Wrong from \"./Wrong\";\n\nconst Game1 = ({ Score, setScore, HighScore, setHighScore, setGameState }) => {\n  const [ElementName, setElementName] = useState();\n  const [counter, setCounter] = useState(100);\n  const [testState, setTestState] = useState(1);\n\n  const [Penalty, setPenalty] = useState(false);\n\n  const DataList = data.elements;\n\n  const submitAnswer = (element) => {\n    if (element === ElementName) {\n      setScore((Score += 1));\n\n      if (Score > HighScore) {\n        setHighScore(Score);\n      }\n      newQuestion();\n    } else {\n      setPenalty(true);\n    }\n  };\n\n  const EndGame = () => {\n    localStorage.setItem(\"highscore\", HighScore);\n    setGameState(3);\n  };\n\n  const newQuestion = () => {\n    var randomElements = Math.floor(Math.random() * 119);\n    setElementName(DataList[randomElements].name);\n  };\n\n  React.useEffect(() => {\n    testState > 0 &&\n      setTimeout(() => {\n        setScore(0);\n        setTestState(testState - 1);\n      }, 1);\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n    counter === 0 && EndGame();\n    // eslint-disable-next-line\n  }, [counter]);\n\n  useEffect(() => {\n    newQuestion();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"FadeIn\">\n      <PeriodicTable submitAnswer={submitAnswer} />\n      <Line\n        percent={counter}\n        strokeWidth=\"3\"\n        strokeColor=\"#0000FF\"\n        strokeLinecap=\"square\"\n        className=\"time\"\n      />\n      <div className=\"Endgame\">\n        <button class=\"button-24\" onClick={EndGame}>\n          End Game\n        </button>\n      </div>\n      {Penalty && (\n        <Wrong\n          className=\"wrongScreen FadeIn\"\n          maxValue={3}\n          onFinish={() => setPenalty(false)}\n        />\n      )}\n\n      <h1 className=\"ScoreBoard\">\n        Score: {Score} &nbsp; | &nbsp; High Score: {HighScore} &nbsp; | &nbsp;\n        Time: {counter} seconds\n      </h1>\n      <h1 className=\"question\">Find the Element: {ElementName}</h1>\n    </div>\n  );\n};\n\nexport default Game1;\n","import React from \"react\";\nimport axios from \"axios\";\n\nimport \"./ScoreBoard.css\";\n\nconst sendData = async (name, score) => {\n  var currentdate = new Date();\n  var datetime =\n    currentdate.getDate() +\n    \"/\" +\n    (currentdate.getMonth() + 1) +\n    \"/\" +\n    currentdate.getFullYear() +\n    \" \" +\n    currentdate.getHours() +\n    \":\" +\n    currentdate.getMinutes() +\n    \":\" +\n    currentdate.getSeconds();\n\n  // const data = JSON.stringify({ name: name, score: score, time: datetime });\n\n  const options = {\n    method: \"POST\",\n    url: \"https://isph-chemistry-game.herokuapp.com/sendScore\",\n    headers: { \"Content-Type\": \"application/json\" },\n    data: { name: name, score: score, time: datetime },\n  };\n\n  axios\n    .request(options)\n    .then(function (response) {\n      console.log(response.data);\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n};\n\nconst ScoreBoard = ({ yourScore, HighScore, endGame }) => {\n  const [validName, setValidName] = React.useState(false);\n  const [name, setName] = React.useState(\"\");\n\n  const GoBack = () => {\n    if (name) {\n      sendData(name, yourScore);\n      endGame();\n    } else {\n      setValidName(true);\n    }\n  };\n\n  return (\n    <div className=\"ScoreBoard--End\">\n      <div className=\"ScoreBoard--container\">\n        <h1 className=\"ScoreBoard--title\">Game Finished!</h1>\n\n        <h2 className=\"ScoreBoard--Details\">\n          Score: {yourScore} &nbsp; | &nbsp; High Score: {HighScore}\n        </h2>\n\n        <input\n          type=\"text\"\n          className={validName ? \" NameNeed\" : \"NameInput\"}\n          onChange={(event) => setName(event.target.value)}\n          placeholder=\"Your Name\"\n        />\n        <h5 style={{ marginBottom: \"5px\" }}>{validName && \"Name needed!\"}</h5>\n\n        <button class=\"button-28\" onClick={GoBack}>\n          Home\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreBoard;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Start.css\";\n\nimport logo from \"../../assets/Logo.png\";\n\nconst Start = ({ startGame1, startGame2, openRanking }) => {\n  const [TopScore, setTopScore] = useState();\n\n  useEffect(() => {\n    setTopScore(localStorage.getItem(\"highscore\"));\n    console.log(TopScore);\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"Start--container\">\n      <img src={logo} alt=\"logo\" className=\"logo\" />\n      <h1>CHEMISTRY GAME</h1>\n      <p className=\"High-score\">High Score: {TopScore}</p>\n\n      <button className=\"button-64\" onClick={startGame1}>\n        <span className=\"text\">Find the element</span>\n      </button>\n\n      <div className=\"StartRow\">\n        <button className=\"button-64\" onClick={startGame2}>\n          <span className=\"text\">Periodic Table</span>\n        </button>\n\n        <button className=\"button-64\" onClick={openRanking}>\n          <span className=\"text\">Ranking</span>\n        </button>\n      </div>\n\n      <p className=\"author\">By: Quang Ngo - Year 10</p>\n    </div>\n  );\n};\n\nexport default Start;\n","import React from \"react\";\nimport data from \"./PeriodicTableJSON.json\";\nimport \"./PeriodicTable.css\";\n\nconst colorMap = {\n  \"noble gas\": \"#FFBC42\",\n  \"alkaline earth metal\": \"#EC674E\",\n  \"diatomic nonmetal\": \"#D81159\",\n  \"alkali metal\": \"#8F2D56\",\n  \"transition metal\": \"#58586B\",\n  \"post-transition metal\": \"#218380\",\n  lanthanide: \"#4AABAF\",\n  metalloid: \"#73D2DE\",\n};\n\nconst PeriodicTableScreen = ({\n  handleOpen,\n  setDetailTitle,\n  setDetailAtomicMass,\n  setDeatilCategory,\n  setDetailDensity,\n  setDetailApperance,\n  setDetailmolar_heat,\n  setDetailmelt,\n  setDetailboil,\n  setDetailsummary,\n  setDetailSource,\n}) => {\n  return (\n    <div className=\"periodic-table\">\n      {data.elements.map((element) => (\n        <div\n          className=\"element\"\n          key={element.name}\n          style={{\n            gridRow: element.ypos,\n            gridColumn: element.xpos,\n            borderColor: colorMap[element.category],\n            width: \"64px\",\n          }}\n          onClick={() => {\n            setDetailTitle(element.name);\n            setDetailAtomicMass(element.atomic_mass);\n            setDeatilCategory(element.category);\n            setDetailDensity(element.density);\n            setDetailApperance(element.appearance);\n            setDetailmolar_heat(element.molar_heat);\n            setDetailmelt(element.melt);\n            setDetailboil(element.boil);\n            setDetailsummary(element.summary);\n            setDetailSource(element.source);\n            handleOpen();\n          }}\n        >\n          <strong>{element.symbol}</strong>\n          <small className=\"number\">{element.number}</small>\n          <small className=\"name\">{element.name}</small>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PeriodicTableScreen;\n","import React, { useState } from \"react\";\n\nimport PeriodicTableScreen from \"./PeriodicTableScreen\";\n// import Test from \"../Test/Test\";\nimport { Button, Modal } from \"rsuite\";\nimport \"rsuite/dist/rsuite.min.css\";\n\nimport \"./PTable.css\";\n\nconst converKToC = (K) => {\n  const Celsius = K - 273.15;\n  return Math.round(Celsius * 10) / 10;\n};\n\nconst PTable = ({ goHome }) => {\n  const [open, setOpen] = useState(false);\n\n  const [DetailTitle, setDetailTitle] = useState(\"\");\n  const [DetailAtomicMass, setDetailAtomicMass] = useState(0);\n  const [DeatilCategory, setDeatilCategory] = useState(\"\");\n  const [DetailDensity, setDetailDensity] = useState();\n  const [DetailApperance, setDetailApperance] = useState(\"\");\n  const [Detailmolar_heat, setDetailmolar_heat] = useState(0);\n  const [Detailmelt, setDetailmelt] = useState(0);\n  const [Detailboil, setDetailboil] = useState(0);\n  const [Detailsummary, setDetailsummary] = useState(\"\");\n  const [DetailSource, setDetailSource] = useState();\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <h1>Periodic Table</h1>\n      <PeriodicTableScreen\n        handleOpen={handleOpen}\n        setDetailTitle={setDetailTitle}\n        setDetailAtomicMass={setDetailAtomicMass}\n        setDeatilCategory={setDeatilCategory}\n        setDetailDensity={setDetailDensity}\n        setDetailApperance={setDetailApperance}\n        setDetailmolar_heat={setDetailmolar_heat}\n        setDetailmelt={setDetailmelt}\n        setDetailboil={setDetailboil}\n        setDetailsummary={setDetailsummary}\n        setDetailSource={setDetailSource}\n      />\n      <Button onClick={goHome} appearance=\"primary\" className=\"GoHome\">\n        <p>Home</p>\n      </Button>\n      <a\n        target=\"_blank\"\n        href=\"https://github.com/Bowserinator/Periodic-Table-JSON\"\n        rel=\"noopener noreferrer\"\n        className=\"DataSource\"\n      >\n        Data Source\n      </a>\n\n      <Modal open={open} onClose={handleClose}>\n        <Modal.Header>\n          <Modal.Title className=\"DetailTitle\">\n            {DetailTitle}\n            <span className={`cat_name ${DeatilCategory}`}>\n              {DeatilCategory}\n            </span>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {DetailApperance && (\n            <div className=\"appearance\">\n              <strong>Appearance:</strong> {DetailApperance}\n            </div>\n          )}\n          <div className=\"atom_info\">\n            <span>Atomic Mass: {DetailAtomicMass} | </span>\n            <span>Density: {DetailDensity}</span>\n            {Detailmolar_heat && <span> | Molar Heat: {Detailmolar_heat}</span>}\n            {Detailmelt && <span> | Melt: {converKToC(Detailmelt)} ºC</span>}\n            {Detailboil && <span> | Boil: {converKToC(Detailboil)} ºC</span>}\n          </div>\n          <div>\n            {Detailsummary} ...{\" \"}\n            <a target=\"_blank\" href={DetailSource} rel=\"noopener noreferrer\">\n              Source\n            </a>\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={handleClose} appearance=\"primary\">\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default PTable;\n","import React, { useEffect, useState } from \"react\";\nimport DataTable, { createTheme } from \"react-data-table-component\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"./HighScore.css\";\n\ncreateTheme(\"solarized\", {\n  text: {\n    primary: \"#fff\",\n    secondary: \"#fff\",\n  },\n  background: {\n    default: \"#23439e\",\n  },\n  context: {\n    background: \"#cb4b16\",\n    text: \"#FFFFFF\",\n  },\n  divider: {\n    default: \"#131f41\",\n  },\n  action: {\n    button: \"rgba(0,0,0,.54)\",\n    hover: \"rgba(0,0,0,.08)\",\n    disabled: \"rgba(0,0,0,.12)\",\n  },\n});\n\nconst HighScorePage = ({ goHome }) => {\n  // return a table with name and score (grid)\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://isph-chemistry-game.herokuapp.com/getScore\")\n      .then((res) => {\n        setData(res.data.scores);\n      });\n  }, []);\n\n  const columns = [\n    {\n      name: \"Name\",\n      selector: (row) => row.name,\n    },\n    {\n      name: \"Score\",\n      selector: (row) => row.score,\n    },\n  ];\n\n  return (\n    <RankingTitleContainer>\n      <RankingTitle>Ranks</RankingTitle>\n      <RankingTable>\n        <DataTable\n          columns={columns}\n          data={data}\n          theme=\"solarized\"\n          responsive\n          fixedHeader\n        />\n      </RankingTable>\n      <button\n        style={{ width: \"200px\", marginTop: \"10px\" }}\n        class=\"button-28\"\n        onClick={goHome}\n      >\n        Home\n      </button>\n    </RankingTitleContainer>\n  );\n};\n\nconst RankingTitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #131f41;\n  height: 100vh;\n  text-align: center;\n`;\n\nconst RankingTable = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 40%;\n`;\n\nconst RankingTitle = styled.h1`\n  font-size: 3rem;\n  color: #fff;\n  margin-bottom: 1rem;\n`;\n\nexport default HighScorePage;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport Game1 from \"./Components/Game1/Game1\";\nimport ScoreBoard from \"./Components/Periodic_Table/ScoreBoard\";\nimport Start from \"./Components/Start/Start\";\nimport PTable from \"./Components/Table/PTable\";\nimport HighScorePage from \"./Components/HighScore/HighScore\";\n// import Test from \"./Components/Test/Test\";\n\n// import PeriodicTable from \"./Components/Periodic_Table/PeriodicTable\";\n// import Video from \"./Components/Periodic_Table/Video\";\n\nfunction App() {\n  const [Score, setScore] = useState(0);\n  const [GameState, setGameState] = useState(0);\n  const [HighScore, setHighScore] = useState(0);\n\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 100);\n\n  const startGame1 = () => {\n    setGameState(1);\n  };\n\n  const startGame2 = () => {\n    setGameState(2);\n  };\n\n  const openRanking = () => {\n    setGameState(4);\n  };\n\n  const goHome = () => setGameState(0);\n\n  return (\n    <div className=\"\">\n      {GameState === 1 ? (\n        <Game1\n          setScore={setScore}\n          Score={Score}\n          setHighScore={setHighScore}\n          HighScore={HighScore}\n          setGameState={setGameState}\n          expiryTimestamp={time}\n        />\n      ) : GameState === 2 ? (\n        <PTable goHome={goHome} />\n      ) : GameState === 3 ? (\n        <ScoreBoard yourScore={Score} HighScore={HighScore} endGame={goHome} />\n      ) : GameState === 4 ? (\n        <HighScorePage goHome={goHome} />\n      ) : (\n        <Start\n          startGame1={startGame1}\n          startGame2={startGame2}\n          openRanking={openRanking}\n        />\n        // <Wrong />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}